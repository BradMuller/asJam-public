package  {		import flash.display.Sprite;	import flash.events.MouseEvent;	import flash.geom.Point;	import flash.events.Event;		public class ScrollList extends Sprite {				private var dragStartCoords:Point;		private var inputBeginCoords:Point;		private var dragged:Boolean;		public function ScrollList() {			// constructor code						this.addEventListener( Event.ADDED_TO_STAGE, this.onAddedToStage );		}				private function onAddedToStage( event:Event ):void{			this.stage.addEventListener( MouseEvent.MOUSE_DOWN, this.onInputBegin );		}				private function onInputBegin(event:MouseEvent):void{			inputBeginCoords = new Point( event.stageX, event.stageY );			dragged = false;			dragStartCoords = new Point( this.x, this.y );						stage.addEventListener( MouseEvent.MOUSE_MOVE, this.onInputMove );			stage.addEventListener( MouseEvent.MOUSE_UP, this.onInputEnd, true );		}				private function onInputMove(event:MouseEvent):void{			var tempCoords:Point = new Point( event.stageX, event.stageY );			var delta:Point = tempCoords.subtract(inputBeginCoords);						if( !dragged ){				if( Math.abs(delta.y) > 100 ){					dragged = true;					stage.addEventListener( MouseEvent.MOUSE_MOVE, this.onInputMove, true );				}else{					return;				}			}else{				event.stopImmediatePropagation();			}						//this.x = this.dragStartCoords.x + delta.x;			this.y = this.dragStartCoords.y + delta.y;			if( this.y > 0 ){				this.y = 0;			}else{				if( this.height > stage.stageHeight ){					if( this.y + this.height < stage.stageHeight ){						this.y = stage.stageHeight - this.height;					}				}else{					this.y = 0;				}			}		}				private function onInputEnd(event:MouseEvent):void{			if( dragged ){				trace("stopping");				event.stopPropagation();			}						stage.removeEventListener( MouseEvent.MOUSE_MOVE, this.onInputMove );			stage.removeEventListener( MouseEvent.MOUSE_MOVE, this.onInputMove, true );			stage.removeEventListener( MouseEvent.MOUSE_UP, this.onInputEnd, true );		}	}	}